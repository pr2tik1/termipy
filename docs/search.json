[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TermiPy",
    "section": "",
    "text": "Welcome to TermiPy\nTermiPy is a lightweight and extensible command-line shell designed for users who want a simplified, custom terminal interface. It provides core terminal features like directory navigation, file management, and command execution, making it easy to interact with your file system. Built to be minimal and efficient, TermiPy is cross-platform, running on Linux, macOS, and Windows.",
    "crumbs": [
      "Welcome to TermiPy"
    ]
  },
  {
    "objectID": "index.html#package-goals",
    "href": "index.html#package-goals",
    "title": "TermiPy",
    "section": "Package Goals",
    "text": "Package Goals\nTermiPy aims to achieve the following objectives:\n\nSimplicity: Provide essential shell functionality in a streamlined way.\nExtensibility: Offer a flexible base for customization and expansion.\nCross-Platform Compatibility: Ensure functionality across major operating systems.\nUser-Friendly: Create an intuitive interface for both beginners and experienced users.",
    "crumbs": [
      "Welcome to TermiPy"
    ]
  },
  {
    "objectID": "index.html#key-features",
    "href": "index.html#key-features",
    "title": "TermiPy",
    "section": "Key Features",
    "text": "Key Features\nTermiPy offers a range of features to enhance your command-line experience:\n\nFile Management:\n\nNavigate directories with ease\nList files and directories\nPerform file operations (create, delete, rename)\n\nCommand Execution:\n\nRun shell commands directly within TermiPy\nExecute custom Python scripts\n\nResource Monitoring:\n\nCheck system statistics in real-time\nMonitor CPU usage\nTrack memory utilization\nObserve disk usage\n\nEnvironment Setup:\n\nQuickly configure Python virtual environments\nSet up R environments for data analysis projects\n\nCross-Platform Support:\n\nRun on Linux, macOS, and Windows seamlessly",
    "crumbs": [
      "Welcome to TermiPy"
    ]
  },
  {
    "objectID": "index.html#installation-usage",
    "href": "index.html#installation-usage",
    "title": "TermiPy",
    "section": "Installation & Usage",
    "text": "Installation & Usage\nInstall the latest stable version of TermiPy via pip:\npip install termipy==0.2.7\ntermipy\nFor detailed instructions, including how to install specific versions or contribute to the project, please visit our Getting Started guide.",
    "crumbs": [
      "Welcome to TermiPy"
    ]
  },
  {
    "objectID": "index.html#documentation",
    "href": "index.html#documentation",
    "title": "TermiPy",
    "section": "Documentation",
    "text": "Documentation\nFor full documentation, including API references and tutorials, visit our Read the Docs page.",
    "crumbs": [
      "Welcome to TermiPy"
    ]
  },
  {
    "objectID": "index.html#contributions",
    "href": "index.html#contributions",
    "title": "TermiPy",
    "section": "Contributions",
    "text": "Contributions\nWe welcome contributions from the community! Whether it’s bug reports, feature requests, or code contributions, please check out our GitHub repository and read our Contributing Guidelines to get involved.",
    "crumbs": [
      "Welcome to TermiPy"
    ]
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "TermiPy",
    "section": "License",
    "text": "License\nTermiPy is open-source software licensed under the MIT License. See the LICENSE file for more details.",
    "crumbs": [
      "Welcome to TermiPy"
    ]
  },
  {
    "objectID": "getting-started.html",
    "href": "getting-started.html",
    "title": "Getting Started",
    "section": "",
    "text": "Installation\nYou can install TermiPy using pip, the Python package installer:\nVisit PyPi for more releases - https://pypi.org/project/termipy/",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "getting-started.html#installation",
    "href": "getting-started.html#installation",
    "title": "Getting Started",
    "section": "",
    "text": "pip install termipy",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "getting-started.html#running-termipy",
    "href": "getting-started.html#running-termipy",
    "title": "Getting Started",
    "section": "Running TermiPy",
    "text": "Running TermiPy\nAfter installation, you can start TermiPy by running:\ntermipy\nIf you encounter any PATH issues, you can use:\nPATH=\"/usr/bin:/usr/local/bin\" termipy",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "getting-started.html#basic-usage",
    "href": "getting-started.html#basic-usage",
    "title": "Getting Started",
    "section": "Basic Usage",
    "text": "Basic Usage\nOnce TermiPy is running, you’ll see the TermiPy prompt:\n@termipy &gt;&gt;\nYou can now start entering commands. Here are some basic commands to get you started:\n\necho &lt;message&gt;: Print a message to the terminal\n@termipy &gt;&gt; echo Hello, TermiPy!\ngetwd or ls: Get current working directory\n@termipy &gt;&gt; getwd\nsetwd &lt;directory&gt;: Change directory\n@termipy &gt;&gt; setwd /path/to/directory\ntypeof &lt;command&gt;: Show command type\n@termipy &gt;&gt; typeof echo\nclear (aliases: cls, clr): Clear the screen\n@termipy &gt;&gt; clear\ntree [directory]: Show directory structure\n@termipy &gt;&gt; tree\nhelp: Display help information\n@termipy &gt;&gt; help\nexit: Exit TermiPy\n@termipy &gt;&gt; exit\n\nFor a full list of available commands, use the commands command:\n@termipy &gt;&gt; commands",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "getting-started.html#next-steps",
    "href": "getting-started.html#next-steps",
    "title": "Getting Started",
    "section": "Next Steps",
    "text": "Next Steps\n\nExplore File Handling operations.\nLearn about Setting Up Environments.\nExplore Resource Monitoring.\nCheck out the About for more documentation and support.",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "file-handling.html",
    "href": "file-handling.html",
    "title": "File Handling",
    "section": "",
    "text": "Listing Files and Directories",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#listing-files-and-directories",
    "href": "file-handling.html#listing-files-and-directories",
    "title": "File Handling",
    "section": "",
    "text": "getwd or ls\nList contents of the current directory\n@termipy &gt;&gt; getwd\n@termipy &gt;&gt; ls\n\n\ntree [directory]\nShow directory structure\n@termipy &gt;&gt; tree\n@termipy &gt;&gt; tree /path/to/directory",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#navigating-directories",
    "href": "file-handling.html#navigating-directories",
    "title": "File Handling",
    "section": "Navigating Directories",
    "text": "Navigating Directories\n\nsetwd &lt;directory&gt;\nChange the current working directory\n@termipy &gt;&gt; setwd /path/to/directory",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#creating-files-and-directories",
    "href": "file-handling.html#creating-files-and-directories",
    "title": "File Handling",
    "section": "Creating Files and Directories",
    "text": "Creating Files and Directories\n\ncreate &lt;path&gt;\nCreate a new file or directory\n@termipy &gt;&gt; create new_file.txt\n@termipy &gt;&gt; create new_directory/",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#deleting-files-and-directories",
    "href": "file-handling.html#deleting-files-and-directories",
    "title": "File Handling",
    "section": "Deleting Files and Directories",
    "text": "Deleting Files and Directories\n\ndelete &lt;path&gt;\nDelete a file or directory\n@termipy &gt;&gt; delete old_file.txt\n@termipy &gt;&gt; delete old_directory/",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#renaming-files-and-directories",
    "href": "file-handling.html#renaming-files-and-directories",
    "title": "File Handling",
    "section": "Renaming Files and Directories",
    "text": "Renaming Files and Directories\n\nrename &lt;old&gt; &lt;new&gt;\nRename a file or directory\n@termipy &gt;&gt; rename old_name.txt new_name.txt",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#searching-for-files",
    "href": "file-handling.html#searching-for-files",
    "title": "File Handling",
    "section": "Searching for Files",
    "text": "Searching for Files\n\nsearch &lt;filename&gt;\nSearch for a file in the current directory and subdirectories\n@termipy &gt;&gt; search important_doc.pdf",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#file-permissions",
    "href": "file-handling.html#file-permissions",
    "title": "File Handling",
    "section": "File Permissions",
    "text": "File Permissions\n\npermissions &lt;file&gt;\nShow file permissions\n@termipy &gt;&gt; permissions myfile.txt",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#disk-usage",
    "href": "file-handling.html#disk-usage",
    "title": "File Handling",
    "section": "Disk Usage",
    "text": "Disk Usage\n\ndiskusage [path]\nShow disk usage for a specific path or the current directory\n@termipy &gt;&gt; diskusage\n@termipy &gt;&gt; diskusage /home/user",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#file-details",
    "href": "file-handling.html#file-details",
    "title": "File Handling",
    "section": "File Details",
    "text": "File Details\n\nabout &lt;file&gt;\nShow file details\n@termipy &gt;&gt; about myfile.txt",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "file-handling.html#tips-for-file-handling",
    "href": "file-handling.html#tips-for-file-handling",
    "title": "File Handling",
    "section": "Tips for File Handling",
    "text": "Tips for File Handling\n\nUse tab completion to quickly navigate directories and input file names.\nWhen dealing with files or directories with spaces in their names, use quotes:\n\n@termipy &gt;&gt; setwd \"My Documents\"\n\nBe cautious when using the delete command, as it permanently removes files and directories.\nUse the tree command with a depth parameter to limit the levels shown:\n\n@termipy &gt;&gt; tree -L 2",
    "crumbs": [
      "File Handling"
    ]
  },
  {
    "objectID": "setting-environment.html",
    "href": "setting-environment.html",
    "title": "Setting Up Environments",
    "section": "",
    "text": "Setting Up a Python Environment\nTermiPy allows you to create Python virtual environments using the setpyenv command.",
    "crumbs": [
      "Setting Up Environments"
    ]
  },
  {
    "objectID": "setting-environment.html#setting-up-a-python-environment",
    "href": "setting-environment.html#setting-up-a-python-environment",
    "title": "Setting Up Environments",
    "section": "",
    "text": "Syntax\nsetpyenv [name] [version]\n\nname: The name of the virtual environment (optional)\nversion: The Python version to use (optional)\n\n\n\nExamples\n\nCreate a virtual environment with default name and Python version:\n\n@termipy &gt;&gt; setpyenv\n\nCreate a virtual environment with a specific name:\n\n@termipy &gt;&gt; setpyenv myproject\n\nCreate a virtual environment with a specific name and Python version:\n\n@termipy &gt;&gt; setpyenv myproject 3.9",
    "crumbs": [
      "Setting Up Environments"
    ]
  },
  {
    "objectID": "setting-environment.html#setting-up-an-r-environment",
    "href": "setting-environment.html#setting-up-an-r-environment",
    "title": "Setting Up Environments",
    "section": "Setting Up an R Environment",
    "text": "Setting Up an R Environment\nYou can initialize an R environment using the setrenv command.\n\nSyntax\nsetrenv [name]\n\nname: The name of the R environment (optional)\n\n\n\nExample\nCreate an R environment:\n@termipy &gt;&gt; setrenv myRproject",
    "crumbs": [
      "Setting Up Environments"
    ]
  },
  {
    "objectID": "setting-environment.html#managing-environments",
    "href": "setting-environment.html#managing-environments",
    "title": "Setting Up Environments",
    "section": "Managing Environments",
    "text": "Managing Environments\nOnce you’ve created an environment, you can use standard Python or R commands to manage packages and run scripts within that environment.\n\nActivating Environments\nTermiPy automatically activates the environment upon creation. To switch between environments, you can use the setwd command to navigate to the environment’s directory.\n\n\nInstalling Packages\nUse pip for Python environments:\n@termipy &gt;&gt; pip install package_name\nUse install.packages() for R environments:\n@termipy &gt;&gt; R -e \"install.packages('package_name')\"",
    "crumbs": [
      "Setting Up Environments"
    ]
  },
  {
    "objectID": "setting-environment.html#creating-a-devcontainer-configuration",
    "href": "setting-environment.html#creating-a-devcontainer-configuration",
    "title": "Setting Up Environments",
    "section": "Creating a DevContainer Configuration",
    "text": "Creating a DevContainer Configuration\nTermiPy allows you to create a DevContainer configuration using the createdevcontainer command.\n\nSyntax\ncreatedevcontainer\nThis command runs interactively, prompting you for information to create the DevContainer configuration.\n\n\nExample\nCreate a DevContainer configuration:\n@termipy &gt;&gt; createdevcontainer\nThe command will guide you through the process, asking for:\n\nWhether you want to use a custom devcontainer.json file\nContainer name\nImage URL or custom image location\nFeatures to include (e.g., Git, Python)\nVS Code extensions to install\nAdditional settings\n\nAfter providing the necessary information, TermiPy will create a .devcontainer/devcontainer.json file in your current directory.",
    "crumbs": [
      "Setting Up Environments"
    ]
  },
  {
    "objectID": "setting-environment.html#best-practices",
    "href": "setting-environment.html#best-practices",
    "title": "Setting Up Environments",
    "section": "Best Practices",
    "text": "Best Practices\n\nUse descriptive names for your environments to easily identify their purpose.\nCreate separate environments for different projects to avoid package conflicts.\nRegularly update your environments to ensure you’re using the latest package versions.\nDocument the packages and versions used in your project for reproducibility.\nWhen creating a DevContainer, consider the specific needs of your project and include only the necessary features and extensions.",
    "crumbs": [
      "Setting Up Environments"
    ]
  },
  {
    "objectID": "setting-environment.html#troubleshooting",
    "href": "setting-environment.html#troubleshooting",
    "title": "Setting Up Environments",
    "section": "Troubleshooting",
    "text": "Troubleshooting\nIf you encounter any issues while setting up environments, make sure:\n\nYou have the required Python or R versions installed on your system.\nYou have the necessary permissions to create directories and install packages.\nYour PATH environment variable is correctly set.\nFor R environments, ensure that R is properly installed and accessible from the command line.\nFor DevContainer issues, ensure that Docker is properly installed and running on your system.\nCheck that the specified image URL or custom image location is correct and accessible.",
    "crumbs": [
      "Setting Up Environments"
    ]
  },
  {
    "objectID": "resource-stats.html",
    "href": "resource-stats.html",
    "title": "Resource Monitoring",
    "section": "",
    "text": "Using the Resource Monitoring Command\nTo start monitoring system resources, use the following command:",
    "crumbs": [
      "Resource Monitoring"
    ]
  },
  {
    "objectID": "resource-stats.html#using-the-resource-monitoring-command",
    "href": "resource-stats.html#using-the-resource-monitoring-command",
    "title": "Resource Monitoring",
    "section": "",
    "text": "@termipy &gt;&gt; resource",
    "crumbs": [
      "Resource Monitoring"
    ]
  },
  {
    "objectID": "resource-stats.html#understanding-the-output",
    "href": "resource-stats.html#understanding-the-output",
    "title": "Resource Monitoring",
    "section": "Understanding the Output",
    "text": "Understanding the Output\nThe resource monitoring feature provides information on three key areas:\n\nSystem and Hardware Information\nTemperature and Battery\nProcess and GPU Usage\n\n\nSystem and Hardware Information\nThis section displays various system metrics, including:\n\nOS information\nCPU details\nTotal RAM\nSystem uptime\nCPU Usage (color-coded)\nMemory Usage (color-coded)\nAvailable Memory\nDisk Usage (color-coded)\nFree Disk Space\nNetwork data sent and received\n\nExample output:\n┌────────────────────────────────────────────────────────────────────────────────┐\n│ System and Hardware Information                                                │\n├────────────────────────────────────────────────────────────────────────────────┤\n│ OS: Windows                                                                    │\n│ CPU: 4 cores (8 threads)                                                       │\n│ Total RAM: 16.00 GB                                                            │\n│ Uptime: 2d 3h 45m 30s                                                          │\n│ CPU Usage: 5.0%                                                                │\n│ Memory Usage: 60.0%                                                            │\n│ Available Memory: 6.40 GB                                                      │\n│ Disk Usage: 75.0%                                                              │\n│ Free Disk Space: 250.00 GB                                                     │\n│ Network Sent: 100.50 MB                                                        │\n│ Network Recv: 1024.75 MB                                                       │\n└────────────────────────────────────────────────────────────────────────────────┘\n\n\nTemperature and Battery\nThis section shows temperature information (if available) and battery status:\n\nCPU Temperature (if available)\nBattery percentage (if applicable)\nPower status\nEstimated battery time left (if applicable)\n\nExample output:\n┌────────────────────────────────────────────────────────────────────────────────┐\n│ Temperature and Battery                                                        │\n├────────────────────────────────────────────────────────────────────────────────┤\n│ CPU Temp (coretemp): 45°C                                                      │\n│ Battery: 80.0%                                                                 │\n│ Power Plugged: No                                                              │\n│ Time Left: 3h 30m                                                              │\n└────────────────────────────────────────────────────────────────────────────────┘\n\n\nProcess and GPU Usage\nThis section lists the top 5 CPU-consuming processes and GPU information (if available):\n\nProcess ID (PID)\nProcess Name\nCPU Usage Percentage\nGPU Name, Usage, Memory, and Temperature (if applicable)\n\nExample output:\n┌────────────────────────────────────────────────────────────────────────────────┐\n│ Process and GPU Usage                                                          │\n├────────────────────────────────────────────────────────────────────────────────┤\n│ Process 1: PID: 1234   Name: chrome.exe       CPU: 10.5%                       │\n│ Process 2: PID: 5678   Name: python.exe       CPU: 5.2%                        │\n│ Process 3: PID: 9101   Name: explorer.exe     CPU: 2.1%                        │\n│ Process 4: PID: 1122   Name: vscode.exe       CPU: 1.8%                        │\n│ Process 5: PID: 3344   Name: spotify.exe      CPU: 1.5%                        │\n│ GPU 0: NVIDIA GeForce RTX 3080                                                 │\n│ GPU 0 Usage: 30.0%                                                             │\n│ GPU 0 Memory: 40.0%                                                            │\n│ GPU 0 Temperature: 65°C                                                        │\n└────────────────────────────────────────────────────────────────────────────────┘",
    "crumbs": [
      "Resource Monitoring"
    ]
  },
  {
    "objectID": "resource-stats.html#continuous-monitoring",
    "href": "resource-stats.html#continuous-monitoring",
    "title": "Resource Monitoring",
    "section": "Continuous Monitoring",
    "text": "Continuous Monitoring\nThe resource monitoring feature updates every 2 seconds, providing a near real-time view of your system’s resource usage. The display is refreshed automatically, clearing the screen and showing the latest information.\nTo stop the monitoring, press Ctrl+C. You’ll see a message confirming that the monitoring has stopped:\nStopped monitoring resource usage.",
    "crumbs": [
      "Resource Monitoring"
    ]
  },
  {
    "objectID": "resource-stats.html#color-coding",
    "href": "resource-stats.html#color-coding",
    "title": "Resource Monitoring",
    "section": "Color Coding",
    "text": "Color Coding\nThe output uses color coding to help quickly identify resource usage levels:\n\nGreen: Low usage (0-49%)\nYellow: Moderate usage (50-79%)\nRed: High usage (80-100%)\n\nFor temperatures: - Green: Cool (&lt; 60°C) - Yellow: Warm (60-79°C) - Red: Hot (≥ 80°C)",
    "crumbs": [
      "Resource Monitoring"
    ]
  },
  {
    "objectID": "resource-stats.html#use-cases-and-tips",
    "href": "resource-stats.html#use-cases-and-tips",
    "title": "Resource Monitoring",
    "section": "Use Cases and Tips",
    "text": "Use Cases and Tips\n[The existing Use Cases and Tips sections can remain as they are, as they are still applicable to the updated functionality.]",
    "crumbs": [
      "Resource Monitoring"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Why TermiPy?",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "about.html#why-termipy",
    "href": "about.html#why-termipy",
    "title": "About",
    "section": "",
    "text": "Simplicity: TermiPy focuses on core functionalities without unnecessary complexity.\nExtensibility: Easily add new commands and features to suit your needs.\nCross-Platform: Works seamlessly on Linux, macOS, and Windows.\nPython-Based: Leverages the power and flexibility of Python.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "about.html#key-features",
    "href": "about.html#key-features",
    "title": "About",
    "section": "Key Features",
    "text": "Key Features\n\nFile and Directory Operations:\n\nNavigate directories\nList files\nCreate, delete, and rename files/directories\n\nCommand Execution:\n\nExecute shell commands directly through TermiPy\n\nSystem Resource Monitoring:\n\nView real-time CPU, memory, disk, and network usage statistics\n\nEnvironment Setup:\n\nSet up Python and R environments with ease\n\nCross-Platform Compatibility:\n\nWorks on Linux, macOS, and Windows",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "about.html#author",
    "href": "about.html#author",
    "title": "About",
    "section": "Author",
    "text": "Author\nTermiPy is created and maintained by Pratik Kumar.\n\nWebsite: pr2tik1\nTwitter: @pr2tik1\nGitHub: @pr2tik1\nLinkedIn: @pratik-kumar",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "about.html#license",
    "href": "about.html#license",
    "title": "About",
    "section": "License",
    "text": "License\nTermiPy is open-source software licensed under the MIT License. For more details, see the LICENSE file in the project repository.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "about.html#contributing",
    "href": "about.html#contributing",
    "title": "About",
    "section": "Contributing",
    "text": "Contributing\nContributions, issues, and feature requests are welcome! Feel free to check the issues page on GitHub.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "about.html#show-your-support",
    "href": "about.html#show-your-support",
    "title": "About",
    "section": "Show Your Support",
    "text": "Show Your Support\nIf you find TermiPy helpful, please give it a star on GitHub!",
    "crumbs": [
      "About"
    ]
  }
]